-- 08.08.2019 09:08:05 AR V1.0a

block.setSize(151, 151)

generic = {
  name = 'Analog inputs',
  parameter = {
    modes = {0, 0, 0, 0, 0, 0, 0, 0}
  },

  init = function(self)
    block.needPPVersion(2, 2, 'c')
    block.setInputsPinCount(0)
    block.setOutputsPinCount(8)
    for i = 1, 8 do
      block.setOutputPinTypeRestrains(i, 'boolean')
      block.setOutputPinName(i, 'AI' .. i)
    end
    block.modifyFlags('SupressStopFunctionCall', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', self.name, [[
]])
    for i = 1, 8 do
      local type = i <= 4 and '0 - 10V' or '0 - 2.5V'
      if i == 1 then
        type = type .. '\nph (L)'
      end
      gui.add('ComboBox', 'ComboBoxModes' .. i, 'Modes', type)
      gui.set('ComboBoxModes' .. i, 'ItemIndex', self.parameter.modes[i])
    end
    gui.setSize()
  end,


  apply = function(self)
    for i = 1, 8 do
      self.parameter.modes[i] = gui.get('ComboBoxModes' .. i, 'ItemIndex')
    end
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar{
      Type = 0x02,
      CenterDrawSource = [[
        draw.setColorA(1, 1, 1)
        draw.text(0, 0, w, h, "]] .. self.name .. [[", 4)
      ]],
      FillColorSource = '0.04, 0.3, 0.56',
      PinNameColorSource = '1, 1, 1',
    }
  end,

  generate = function(self, remote)
    if not remote then
      return false
    end
    local _, _, group = remote:find('(%w*)')
    if group ~= 'ESP32' then
      return false
    end

    local source =
      [==[
        local block = {}

        block.start = function()
        end

        block.step = function(rel1, rel2, rel3, rel4)
        end

        return block
      ]==]
    return source, block.codeInfo('TargetSpecial', 'Lua53')
  end,

}


